package de.lehmann.lehmannorm.logic.mocks;

import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import de.lehmann.lehmannorm.stubs.ConnectionStub;

/**
 * Behavior mock
 *
 * @author Tim Lehmann
 */
public class ConnectionMock extends ConnectionStub {

    private final List<Object> executeOrder = new ArrayList<>();

    @Override
    public PreparedStatement prepareStatement(final String sql) throws SQLException {

        return new StatementMock((final Object o) -> {
            executeOrder.add(o);
        });
    }

    @Override
    public PreparedStatement prepareStatement(final String sql, final int autoGeneratedKeys) throws SQLException {

        return new StatementMock((final Object o) -> {
            executeOrder.add(o);
        });
    }

    @Override
    public String toString() {

        final Iterator<Object> iterator = executeOrder.iterator();
        final StringBuilder order = new StringBuilder();

        if (iterator.hasNext())
            order.append(iterator.next());

        while (iterator.hasNext())
            order.append(",").append(iterator.next());

        return order.toString();
    }
}